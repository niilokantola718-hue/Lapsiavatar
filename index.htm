<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <title>Lapsi Avatar - VR 4-vuotias</title>
    <style>
        body { margin:0; padding:0; overflow:hidden; background:#000; font-family:-apple-system, BlinkMacSystemFont, sans-serif; }
        #ui {
            position:absolute; top:0; left:0; width:100%; height:100%;
            display:flex; flex-direction:column; justify-content:center; align-items:center;
            z-index:1000; background:rgba(0,0,0,0.8);
        }
        button {
            padding:20px 40px; font-size:24px;
            background:linear-gradient(45deg, #FF6B6B, #4ECDC4);
            border:none; border-radius:20px; color:white; cursor:pointer; margin:20px;
        }
        #status {
            color:white; background:rgba(0,0,0,0.7);
            padding:20px; border-radius:15px; margin-top:20px;
            text-align:center; max-width:80%; font-size:18px;
        }
    </style>
</head>
<body>
    <div id="ui">
        <button id="startButton">Käynnistä VR - Lapsi Avatar</button>
        <div id="status">Valmistellaan VR-tilaa...</div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script>
        let scene, camera, renderer;
        let xrSession = null;
        let avatar = null;

        const status = document.getElementById('status');
        function updateStatus(msg) { status.textContent = msg; console.log(msg); }

        async function init() {
            updateStatus('Alustetaan VR:lle...');
            scene = new THREE.Scene();

            // Kamera asetettu 4-vuotiaan silmien korkeudelle (~1.0 m)
            camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 100);
            camera.position.set(0, 1.0, 0); // 4-vuotiaan silmien korkeus

            // Renderer
            renderer = new THREE.WebGLRenderer({ antialias:true, alpha:false });
            renderer.setPixelRatio(window.devicePixelRatio);
            renderer.setSize(window.innerWidth, window.innerHeight);
            renderer.xr.enabled = true;
            document.body.appendChild(renderer.domElement);

            // Valaistus
            const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);
            scene.add(ambientLight);
            const dirLight = new THREE.DirectionalLight(0xffffff, 0.6);
            dirLight.position.set(0.5, 1, 0.5);
            scene.add(dirLight);

            // Lattia parketilla epätasaisuuksineen
            const floorGeometry = new THREE.PlaneGeometry(5,5,20,20);
            const floorMaterial = new THREE.MeshPhongMaterial({ color:0xdeb887, side:THREE.DoubleSide });
            // Luo epätasaisuuksia
            for(let i=0;i<floorGeometry.attributes.position.count;i++){
                const y = Math.random()*0.02; // pieni korkeusvaihtelu
                floorGeometry.attributes.position.setY(i, y);
            }
            floorGeometry.computeVertexNormals();
            const floor = new THREE.Mesh(floorGeometry,floorMaterial);
            floor.rotation.x = -Math.PI/2;
            floor.position.y = 0; // lattian korkeus virtuaalikameran alapuolella
            scene.add(floor);

            // Luo lapsiavatar
            createChildAvatar();

            // Käynnistyspainike
            document.getElementById('startButton').addEventListener('click', startVRSession);
            window.addEventListener('resize', onWindowResize);
            updateStatus('Valmis - paina "Käynnistä VR"');
        }

        function createChildAvatar() {
            avatar = new THREE.Group();

            const headGeometry = new THREE.SphereGeometry(0.15, 16, 16);
            const headMaterial = new THREE.MeshPhongMaterial({ color:0xFFD700, transparent:true, opacity:0.8 });
            const head = new THREE.Mesh(headGeometry, headMaterial);
            head.position.y = 0.15;
            avatar.add(head);

            const bodyGeometry = new THREE.CylinderGeometry(0.12,0.15,0.3,16);
            const bodyMaterial = new THREE.MeshPhongMaterial({ color:0x4169E1, transparent:true, opacity:0.8 });
            const body = new THREE.Mesh(bodyGeometry, bodyMaterial);
            body.position.y = -0.15;
            avatar.add(body);

            avatar.position.set(0,-0.3,-0.5);
            scene.add(avatar);
        }

        async function startVRSession() {
            updateStatus('Yritetään käynnistää VR-sessio...');
            try {
                const session = await navigator.xr.requestSession('immersive-vr');
                xrSession = session;
                await renderer.xr.setSession(session);
                document.getElementById('ui').style.display = 'none';
                renderer.setAnimationLoop(render);
                updateStatus('VR-sessio käynnistynyt! Näet maailman 4-vuotiaan silmin.');
            } catch(e) {
                updateStatus('VR-sessio epäonnistui: ' + e.message);
                console.error(e);
            }
        }

        function onWindowResize() {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        }

        function render() {
            if(avatar && camera){
                avatar.position.copy(camera.position);
                avatar.position.y -= 0.3;
                avatar.position.z -= 0.5;
                avatar.rotation.copy(camera.rotation);
            }
            renderer.render(scene, camera);
        }

        window.addEventListener('load', init);
    </script>
</body>
</html>
